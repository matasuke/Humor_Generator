hl_caps = data.frame(hl_caps, data[name])
name = paste('exp1_q', i, '_hh', sep="")
hh_caps = data.frame(hh_caps, data[name])
}
# calculate frequency of each similarities
origin_count = c()
ll_count = c()
lh_count = c()
hl_count = c()
hh_count = c()
for(i in 1:SUBJECT_NUM){
origin_count = append(origin_count, as.numeric(origin_caps[i, 4:53]))
ll_count = append(ll_count, as.numeric(ll_caps[i, 4:53]))
lh_count = append(lh_count, as.numeric(lh_caps[i, 4:53]))
hl_count = append(hl_count, as.numeric(hl_caps[i, 4:53]))
hh_count = append(hh_count, as.numeric(hh_caps[i, 4:53]))
}
origin_freq = table(origin_count)
ll_freq = table(ll_count)
lh_freq = table(lh_count)
hl_freq = table(hl_count)
hh_freq = table(hh_count)
# create each freq barplot
par(mfrow=c(3,2))
#par(mfrow=c(1,2))
barplot(origin_freq, main="Baseline", xlab="Scores(Baseline)" , ylab="Frequency", ylim=c(0,800))
barplot(ll_freq, main="LL captions", xlab="Scores(LL Captions)" , ylab="Frequency", ylim=c(0,800))
barplot(lh_freq, main="LH captions", xlab="Scores(LH Captions)" , ylab="Frequency", ylim=c(0,800))
barplot(hl_freq, main="HL captions", xlab="Scores(Proposed method)" , ylab="Frequency", ylim=c(0,800))
barplot(hh_freq, main="HH captions", xlab="Scores(HH Captions)" , ylab="Frequency", ylim=c(0,800))
#friedman test and Wilcoxon signed rank test
#install.packages("exactRankTests", repos="http://cran.ism.ac.jp/")
library(exactRankTests)
origin_all_scores = c()
ll_all_scores = c()
lh_all_scores = c()
hl_all_scores = c()
hh_all_scores = c()
for(i in 4:length(origin_caps)){
origin_all_scores = c(origin_all_scores, origin_caps[,i])
ll_all_scores = c(ll_all_scores, ll_caps[,i])
lh_all_scores = c(lh_all_scores, lh_caps[,i])
hl_all_scores = c(hl_all_scores, hl_caps[,i])
hh_all_scores = c(hh_all_scores, hh_caps[,i])
}
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T)　# there is difference
wilcox.exact(x=origin_all_scores,y=lh_all_scores,paired=T)　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T)　# there is difference
wilcox.exact(x=origin_all_scores,y=lh_all_scores,paired=T)　# there is difference
wilcox.exact(x=origin_all_scores,y=hl_all_scores,paired=T)　# there is difference
wilcox.exact(x=origin_all_scores,y=hh_all_scores,paired=T)　# there is difference
wilcox.exact(x=ll_all_scores,y=lh_all_scores,paired=T) # No difference
wilcox.exact(x=ll_all_scores,y=hl_all_scores,paired=T) # there is difference between ll caps and hl caps p < 0.01
wilcox.exact(x=ll_all_scores,y=hh_all_scores,paired=T) # No difference
wilcox.exact(x=lh_all_scores,y=hl_all_scores,paired=T) # there is difference between lh caps and hl caps p < 0.01
wilcox.exact(x=lh_all_scores,y=hh_all_scores,paired=T) # No difference
wilcox.exact(x=hl_all_scores,y=hh_all_scores,paired=T) # No difference
j# Original captionｔとその他提案手法を含むcaption間では有意な差が見られたため，只のキャプションを提示するよりは，
wilcox.exact(x=ll_all_scores,y=lh_all_scores,paired=T) # No difference
wilcox.exact(x=ll_all_scores,y=hl_all_scores,paired=T) # there is difference between ll caps and hl caps p < 0.01
wilcox.exact(x=ll_all_scores,y=hh_all_scores,paired=T) # No difference
wilcox.exact(x=lh_all_scores,y=hl_all_scores,paired=T) # there is difference between lh caps and hl caps p < 0.01
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
wilcox.exact(x=origin_all_scores,y=lh_all_scores,paired=T, , alternative = "greater")　# there is difference
wilcox.exact(x=origin_all_scores,y=hl_all_scores,paired=T, alternative = "greater")　# there is difference
wilcox.exact(x=origin_all_scores,y=hh_all_scores,paired=T, alternative = "greater")　# there is difference
wilcox.exact(x=ll_all_scores,y=lh_all_scores,paired=T, , alternative = "greater") # No difference
wilcox.exact(x=ll_all_scores,y=lh_all_scores,paired=T, alternative = "greater") # No difference
wilcox.exact(x=ll_all_scores,y=hl_all_scores,paired=T, alternative = "greater") # there is difference between ll caps and hl caps p < 0.01
wilcox.exact(x=ll_all_scores,y=hh_all_scores,paired=T, alternative = "greater") # No difference
wilcox.exact(x=lh_all_scores,y=hl_all_scores,paired=T, alternative = "greater") # there is difference between lh caps and hl caps p < 0.01
kwilcox.exact(x=lh_all_scores,y=hh_all_scores,paired=T, alternative = "greater") # No difference
wilcox.exact(x=lh_all_scores,y=hh_all_scores,paired=T, alternative = "greater") # No difference
wilcox.exact(x=hl_all_scores,y=hh_all_scores,paired=T, alternative = "greater") # No difference
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T)　# there is difference
wilcox.exact(x=origin_all_scores,y=lh_all_scores,paired=T)　# there is difference
wilcox.exact(x=origin_all_scores,y=hl_all_scores,paired=T)　# there is difference
wilcox.exact(x=origin_all_scores,y=hh_all_scores,paired=T)　# there is difference
wilcox.exact(x=ll_all_scores,y=lh_all_scores,paired=T) # No difference
wilcox.exact(x=ll_all_scores,y=hl_all_scores,paired=T) # there is difference between ll caps and hl caps p < 0.01
wilcox.exact(x=ll_all_scores,y=hh_all_scores,paired=T) # No difference
wilcox.exact(x=lh_all_scores,y=hl_all_scores,paired=T) # there is difference between lh caps and hl caps p < 0.01
wilcox.exact(x=lh_all_scores,y=hh_all_scores,paired=T) # No difference
wilcox.exact(x=hl_all_scores,y=hh_all_scores,paired=T) # No difference
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T)
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T)
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T)　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T, alternative = "greater")　# there is difference
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T,)　# there is difference
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T)　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired = T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=ll_all_scores, paired = T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=ll_all_scores, paired = T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=ll_all_scores, paired = T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=ll_all_scores, paired = T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=origin_all_scores,y=ll_all_scores,paired=T)　# there is difference
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=ll_all_scores, paired = T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=ll_all_scores, paired = T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
ll_all_scores
boxplot(ll_all_scores)
par(mfrow=c(1,1))
boxplot(ll_all_scores)
boxplot(origin_all_scores, ll_all_scores, lh_all_scores. hl_all_scores, hh_all_scores)
boxplot(origin_all_scores, ll_all_scores, lh_all_scores. hl_all_scores, hh_all_scores)
boxplot(origin_all_scores, ll_all_scores, lh_all_scores. hl_all_scores, hh_all_scores)
boxplot(origin_all_scores, ll_all_scores, lh_all_scores. hl_all_scores, hh_all_scores)
test = c(origin_all_scores, ll_all_scores, lh_all_scores. hl_all_scores, hh_all_scores)
test <- c(origin_all_scores, ll_all_scores, lh_all_scores. hl_all_scores, hh_all_scores)
test <- c(origin_all_scores, ll_all_scores, lh_all_scores. hl_all_scores, hh_all_scores)
test <- c(origin_all_scores, ll_all_scores)
test <- c(origin_all_scores, ll_all_scores, lh_all_scores, hl_all_scores, hh_all_scores)
test
test[1]
test[2]
test
boxplot(test)
boxplot(test)
boxplot(test)
boxplot(test)
boxplot(test)
#boxplot
par(mfrow=c(1,1))
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
#boxplot
par(mfrow=c(1,1))
boxplot(test)
boxplot(ll_all_scores)
boxplot(ll_all_scores)
boxplot(lh_all_scores)
boxplot(hh_all_scores)
boxplot(hh_all_scores)
boxplot(cap_scores_mean, names=c('baseline', 'LL caption', 'LH caption', 'HL caption', 'HH caption'), xlab="Captions", ylab="mean scores", ylim=c(1,4))
cap_scores_mean
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
cap_scores_mean
cap_scores_mean[1]
cap_scores_mean[2]
cap_scores_mean[
boxplot(cap_scores_mean)
boxplot(cap_scores_mean, names=c('baseline', 'LL caption', 'LH caption', 'HL caption', 'HH caption'), xlab="Captions", ylab="mean scores", ylim=c(1,4))
#boxplot
par(mfrow=c(1,1))
boxplot(cap_scores_mean, names=c('baseline', 'LL caption', 'LH caption', 'HL caption', 'HH caption'), xlab="Captions", ylab="mean scores", ylim=c(1,4))
wilcox.exact(x=cap_scores_mean[0], y=cap_scores_mean[1], paired=T, alternative = "greater")
cap_scores_mean
cap_scores_mean[0]
cap_scores_mean[1]
wilcox.exact(x=cap_scores_mean[1], y=cap_scores_mean[2], paired=T, alternative = "greater")
test = cap_scores_mean[1]
test
test = as.numeric(cap_scores_mean[1])
test
test = c(cap_scores_mean[1])
test
test1 = c(cap_scores_mean[1])
test2 = c(cap_scores_mean[2])
test3 = c(cap_scores_mean[3])
test4 = c(cap_scores_mean[4])
test5 = c(cap_scores_mean[5])
wilcox.exact(x=test1, y=test2, paired=T, alternative = "greater")
test1
cap_scores_mean
origin_all_scores
test
as.numeric(test1)
test1
as.list(test1)
as.list(test1)
as.list(test2)
test1
list(test1)
cap_scores_mean
cap_scores_mean[1]
as.list(cap_scores_mean[1])
origin_all_scores
cap_scores_mean
cap_scores_mean[1]
cap_scores_mean[1]
origin_all_scores
test1
as.numeric(test1)
test1
as.array(test1)
test1
test1[2]
test1[1]
test1
origin_all_scores
origin_all_scores
cap_scores_mean
cap_scores_mean[1]
test1
tes1 <- c(1.14, 2.62, 1.06, 2.36, 2.20, 1.02, 1.40, 1.28, 1.00, 1.68, 1.00, 1.00, 1.32, 1.04, 3.02, 1.04, 1.12, 1.44, 1.00, 2.14)
tes1
tes1
tes1[3]
tes1[4]
test1
length(test1)
length(tes1)
test2
tes2 <- c(1.06, 1.00, 1.08, 1.78, 2.34, 1.04, 1.28, 1.50, 1.26, 2.08, 1.30, 2.86, 2.70, 1.50, 3.34, 1.28, 1.10, 1.18, 1.06, 2.28)
tes2
tes1
test3
tes3 <- c(1.04, 1.02, 1.02, 2.14, 2.38, 1.06, 1.42, 1.28, 1.32, 2.78, 1.22, 2.74, 1.80, 1.40, 3.82, 1.10, 1.04, 1.30, 1.04, 2.16)
test4
tes4 <- c(1.14, 1.02, 1.00, 2.20, 2.34, 1.22, 1.44, 1.46, 1.26, 2.36, 1.18, 2.64, 3.20, 1.74, 3.52, 1.24, 1.10, 1.68, 1.10, 2.24)
test4
test5
tes4
tes5 <- c(1.08, 1.02, 1.02, 1.96, 2.36, 1.16, 1.68, 1.54, 1.42, 2.54, 1.32, 2.36, 2.20, 1.62, 3.76, 1.18, 1.12, 1.48, 1.04, 2.24)
data
d
d <- c(tes1, tes2, tes3, tes4, tes5)
d
boxplot(tes1, tes2)
boxplot(tes1, tes2, tes3, tes4, tes5)
wilcox.exact(tes1, tes2, paired = T)
wilcox.exact(tes1, tes2, paired = T)
wilcox.exact(tes1, tes2, paired = T, alternative = 'greater')
wilcox.exact(tes2, tes1, paired = T, alternative = 'greater')
wilcox.exact(tes2, tes2, paired = T, alternative = 'greater')
wilcox.exact(tes2, tes1, paired = T, alternative = 'greater')
wilcox.exact(tes3, tes1, paired = T, alternative = 'greater')
wilcox.exact(tes4, tes1, paired = T, alternative = 'greater')
wilcox.exact(tes5, tes1, paired = T, alternative = 'greater')
wilcox.exact(tes5, tes1, paired = T, alternative = 'greater')
wilcox.exact(tes4, tes2, paired = T, alternative = 'greater')
wilcox.exact(tes5, tes2, paired = T, alternative = 'greater')
wilcox.exact(tes5, tes4, paired = T, alternative = 'greater')
wilcox.exact(tes5, tes3, paired = T, alternative = 'greater')
wilcox.exact(tes4, tes3, paired = T, alternative = 'greater')
wilcox.exact(tes4, tes3, paired = T)
wilcox.exact(tes4, tes3, paired = T, alternative = 'greater')
wilcox.exact(tes4, tes5, paired = T, alternative = 'greater')
wilcox.exact(tes5, tes4, paired = T, alternative = 'greater')
wilcox.exact(tes3, tes2, paired = T, alternative = 'greater')
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=ll_all_scores, paired = T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=hl_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=hh_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=ll_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=ll_all_scores, y=lh_all_scores, paired=T, alternative = "greater")
wilcox.exact(tes3, tes2, paired = T, alternative = 'greater')
origin_all_scores
mean(origin_all_scores)
mean(ll_all_scores)
mean(lh_all_scores)
mean(hl_all_scores)
mean(hh_all_scores)
each_cap_mean
#boxplot
par(mfrow=c(1,1))
boxplot(cap_scores_mean, names=c('baseline', 'LL caption', 'LH caption', 'HL caption', 'HH caption'), xlab="Captions", ylab="mean scores", ylim=c(1,4))
# calculate wilcox.exact by above data
wilcox.exact(x=ll_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=lh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hl_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
wilcox.exact(x=hh_all_scores, y=origin_all_scores, paired=T, alternative = "greater")
friedman.test(origin_all_scores, ll_all_scores, lh_all_scores, hl_all_scores, hh_all_scores)
x <- matrix()
x <- matrix(c(origin_all_scores, ll_all_scores, lh_all_scores, hl_all_scores, hh_all_scores), ncol=5, byrow=T)
x
friedman.test(x)
setwd('~/../../../media/matasuke/Ubuntu01/Projects/Humor_Generator/experiments/analysis/data')
exp1 <- read.csv('exp1_result.csv')
exp1 <- read.csv('test.csv')
pre_survey <- read.csv('pre_survey_result.csv')
proposed_data <- read.csv('experiment1.csv')
images <- proposed_data[c(2, 9:20)]
SQH_score <- apply(pre_survey[4:7], MARGIN=1, sum)
MSHS_score <- apply(pre_survey[8:11], MARGIN=1, sum)
pre_survey_scores <- cbind(pre_survey[0:3], SQH_score, MSHS_score)
# bind scores with exp1
data <- merge(pre_survey_scores, exp1, by.x=c('age', 'name', 'sex'))
#remove data which age is more than 30.
data = subset(data, data$age < 30)
#& data$name != 'qd6523bdd7b4dc
#data = subset(data, data$name != "なべぶた奉行" & data$name != '田中亮平' & data$name != 'lantac8')
#data = subset(data, data$name != "なべぶた奉行" & data$name != '田中亮平' & data$name != 'blackk' & data$name != 'heriumu' & data&name != 'karin0726')
# row 6 canavo and 24 REMINDER62 are seems to not to be used
#because her score distribution is not goold. scores for original caption is highter than other caps.
data = subset(data, data$name != 'huwatoro' & data$name != 'a6kn2iwz1' & data$name != 'blackk' & data$name != 'rika314v')
EXP_NUM = 50
SUBJECT_NUM=length(data[,1])
SIMS = c('origin', 'hl', 'hh')
# calculate sum of all subjects for each sims
humor_scores = data.frame(data[1:5])
for(i in SIMS){
label = paste('cap_', i, sep="")
score = 0
for(j in 1:EXP_NUM){
name = paste('exp1_q', j, '_', i, sep="")
score = score + data[name]
}
colnames(score) <- label
humor_scores = data.frame(humor_scores, score)
#transform(humor_scores, label=score)
}
cap_scores_sum = humor_scores[6:8]
cap_scores_mean = cap_scores_sum / EXP_NUM
#mean scores by col
summary(cap_scores_mean)
each_cap_mean = apply(cap_scores_mean, MARGIN=2, mean)
#boxplot
par(mfrow=c(1,1))
boxplot(cap_scores_mean, names=c('baseline', 'HL caption', 'HH caption'), xlab="Captions", ylab="mean scores", ylim=c(1,5))
origin = cap_scores_mean$cap_origin
hl = cap_scores_mean$cap_hl
hh = cap_scores_mean$cap_hh
# 一要因分散分析
all_mean_data <- c(origin, hl, hh)
img_sim <- factor(c(rep('None', SUBJECT_NUM), rep('画像高', SUBJECT_NUM), rep('画像低', SUBJECT_NUM)))
levels <- factor(rep(1:SUBJECT_NUM, 3))
summary(aov(all_mean_data~img_sim+levels))
summary(aov(all_mean_data~img_sim*word_sim+Error(levels+levels:img_sim+levels:word_sim+levels:img_sim:word_sim)))
t.test(origin, hl, paired=TRUE, p.adjust.methods="bon")
t.test(origin, hh, paired=TRUE, p.adjust.methods="bon")
t.test(hl, hh, paired = TRUE, p.adjust.methods="bon")
# here just need to check difference between origin caps and hl captions.
# origin caps
origin_caps = data.frame(data[1:3])
hl_caps = data.frame(data[1:3])
hh_caps = data.frame(data[1:3])
for(i in 1:EXP_NUM){
name = paste('exp1_q', i, '_origin', sep="")
origin_caps = data.frame(origin_caps, data[name])
name = paste('exp1_q', i, '_hl', sep="")
hl_caps = data.frame(hl_caps, data[name])
name = paste('exp1_q', i, '_hh', sep="")
hh_caps = data.frame(hh_caps, data[name])
}
# calculate frequency of each similarities
origin_count = c()
hl_count = c()
hh_count = c()
for(i in 1:SUBJECT_NUM){
origin_count = append(origin_count, as.numeric(origin_caps[i, 4:53]))
hl_count = append(hl_count, as.numeric(hl_caps[i, 4:53]))
hh_count = append(hh_count, as.numeric(hh_caps[i, 4:53]))
}
origin_freq = table(origin_count)
hl_freq = table(hl_count)
hh_freq = table(hh_count)
# create each freq barplot
par(mfrow=c(2,2))
#par(mfrow=c(1,2))
barplot(origin_freq, main="Baseline", xlab="Scores(Baseline)" , ylab="Frequency", ylim=c(0,500))
barplot(hl_freq, main="HL captions", xlab="Scores(Proposed method)" , ylab="Frequency", ylim=c(0,500))
barplot(hh_freq, main="HH captions", xlab="Scores(HH Captions)" , ylab="Frequency", ylim=c(0,500))
#friedman test and Wilcoxon signed rank test
#install.packages("exactRankTests", repos="http://cran.ism.ac.jp/")
library(exactRankTests)
origin_all_scores = c()
hl_all_scores = c()
hh_all_scores = c()
for(i in 4:length(origin_caps)){
origin_all_scores = c(origin_all_scores, origin_caps[,i])
hl_all_scores = c(hl_all_scores, hl_caps[,i])
hh_all_scores = c(hh_all_scores, hh_caps[,i])
}
# calculate wilcox.exact by above data
wilcox.exact(x=origin_all_scores,y=hl_all_scores,paired=T)　# there is difference
wilcox.exact(x=origin_all_scores,y=hh_all_scores,paired=T)　# there is difference
wilcox.exact(x=hl_all_scores,y=hh_all_scores,paired=T) # No difference
wilcox.exact(x=origin_all_scores,y=hh_all_scores,paired=T)　# there is difference
wilcox.exact(x=hl_all_scores,y=hh_all_scores,paired=T) # No difference
#mean scores by col
summary(cap_scores_mean)
